// This file is automatically generated by a script based on the CommandBuilder API
using Unity.Burst;
using UnityEngine;
using System.Collections.Generic;
using Unity.Collections;
using Unity.Mathematics;

namespace Drawing {
	public static class Draw {
		internal static CommandBuilder builder;

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WithMatrix(Matrix4x4)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static CommandBuilder.ScopeMatrix WithMatrix (Matrix4x4 matrix) {
			RetainedGizmosWrapper.Init();
			return builder.WithMatrix(matrix);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WithColor(Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static CommandBuilder.ScopeColor WithColor (Color color) {
			RetainedGizmosWrapper.Init();
			return builder.WithColor(color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WithDuration(float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static CommandBuilder.ScopePersist WithDuration (float duration) {
			RetainedGizmosWrapper.Init();
			return builder.WithDuration(duration);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.InLocalSpace(Transform)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static CommandBuilder.ScopeMatrix InLocalSpace (Transform transform) {
			RetainedGizmosWrapper.Init();
			return builder.InLocalSpace(transform);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.InScreenSpace(Camera)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static CommandBuilder.ScopeMatrix InScreenSpace (Camera camera) {
			RetainedGizmosWrapper.Init();
			return builder.InScreenSpace(camera);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PushMatrix(Matrix4x4)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PushMatrix (Matrix4x4 matrix) {
			RetainedGizmosWrapper.Init();
			builder.PushMatrix(matrix);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PushSetMatrix(Matrix4x4)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PushSetMatrix (Matrix4x4 matrix) {
			RetainedGizmosWrapper.Init();
			builder.PushSetMatrix(matrix);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PopMatrix()
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PopMatrix () {
			RetainedGizmosWrapper.Init();
			builder.PopMatrix();
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PushColor(Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PushColor (Color color) {
			RetainedGizmosWrapper.Init();
			builder.PushColor(color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PopColor()
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PopColor () {
			RetainedGizmosWrapper.Init();
			builder.PopColor();
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PushPersist(float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PushPersist (float duration) {
			RetainedGizmosWrapper.Init();
			builder.PushPersist(duration);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.PopPersist()
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void PopPersist () {
			RetainedGizmosWrapper.Init();
			builder.PopPersist();
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Line(float3,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Line (float3 a, float3 b) {
			RetainedGizmosWrapper.Init();
			builder.Line(a, b);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Ray(float3,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Ray (float3 origin, float3 direction) {
			RetainedGizmosWrapper.Init();
			builder.Ray(origin, direction);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Ray(Ray,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Ray (Ray ray, float length) {
			RetainedGizmosWrapper.Init();
			builder.Ray(ray, length);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXZ(float3,float,float,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXZ (float3 center, float radius, float startAngle = 0f, float endAngle = 2 * Mathf.PI) {
			RetainedGizmosWrapper.Init();
			builder.CircleXZ(center, radius, startAngle, endAngle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXY(float3,float,float,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXY (float3 center, float radius, float startAngle = 0f, float endAngle = 2 * Mathf.PI) {
			RetainedGizmosWrapper.Init();
			builder.CircleXY(center, radius, startAngle, endAngle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Circle(float3,float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Circle (float3 center, float3 normal, float radius) {
			RetainedGizmosWrapper.Init();
			builder.Circle(center, normal, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCylinder(float3,float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCylinder (float3 bottom, float3 top, float radius) {
			RetainedGizmosWrapper.Init();
			builder.WireCylinder(bottom, top, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCylinder(float3,float3,float,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCylinder (float3 position, float3 up, float height, float radius) {
			RetainedGizmosWrapper.Init();
			builder.WireCylinder(position, up, height, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCapsule(float3,float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCapsule (float3 bottom, float3 top, float radius) {
			RetainedGizmosWrapper.Init();
			builder.WireCapsule(bottom, top, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCapsule(float3,float3,float,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCapsule (float3 position, float3 up, float height, float radius) {
			RetainedGizmosWrapper.Init();
			builder.WireCapsule(position, up, height, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireSphere(float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireSphere (float3 position, float radius) {
			RetainedGizmosWrapper.Init();
			builder.WireSphere(position, radius);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(List<Vector3>,bool)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (List<Vector3> points, bool cycle = false) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(Vector3[],bool)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (Vector3[] points, bool cycle = false) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(float3[],bool)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (float3[] points, bool cycle = false) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(NativeArray<float3>,bool)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Polyline (NativeArray<float3> points, bool cycle = false) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(float3,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (float3 center, float3 size) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(center, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(float3,Quaternion,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (float3 center, Quaternion rotation, float3 size) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(center, rotation, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(Bounds)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (Bounds bounds) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(bounds);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidMesh(List<Vector3>,List<int>,List<Color>)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void SolidMesh (List<Vector3> vertices, List<int> triangles, List<Color> colors) {
			RetainedGizmosWrapper.Init();
			builder.SolidMesh(vertices, triangles, colors);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidMesh(Vector3[],int[],Color[],int,int)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void SolidMesh (Vector3[] vertices, int[] triangles, Color[] colors, int vertexCount, int indexCount) {
			RetainedGizmosWrapper.Init();
			builder.SolidMesh(vertices, triangles, colors, vertexCount, indexCount);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXZ(float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXZ (float3 position, float size = 1) {
			RetainedGizmosWrapper.Init();
			builder.CrossXZ(position, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXY(float3,float)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXY (float3 position, float size = 1) {
			RetainedGizmosWrapper.Init();
			builder.CrossXY(position, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Bezier(float3,float3,float3,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Bezier (float3 p0, float3 p1, float3 p2, float3 p3) {
			RetainedGizmosWrapper.Init();
			builder.Bezier(p0, p1, p2, p3);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(float3,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (float3 center, float3 size) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(center, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(Bounds)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (Bounds bounds) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(bounds);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(float3,Quaternion,float3)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (float3 center, Quaternion rotation, float3 size) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(center, rotation, size);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Line(float3,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Line (float3 a, float3 b, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Line(a, b, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Ray(float3,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Ray (float3 origin, float3 direction, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Ray(origin, direction, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Ray(Ray,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Ray (Ray ray, float length, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Ray(ray, length, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXZ(float3,float,float,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXZ (float3 center, float radius, float startAngle, float endAngle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CircleXZ(center, radius, startAngle, endAngle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXZ(float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXZ (float3 center, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CircleXZ(center, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXY(float3,float,float,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXY (float3 center, float radius, float startAngle, float endAngle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CircleXY(center, radius, startAngle, endAngle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CircleXY(float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CircleXY (float3 center, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CircleXY(center, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Circle(float3,float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Circle (float3 center, float3 normal, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Circle(center, normal, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCylinder(float3,float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCylinder (float3 bottom, float3 top, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireCylinder(bottom, top, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCylinder(float3,float3,float,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCylinder (float3 position, float3 up, float height, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireCylinder(position, up, height, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCapsule(float3,float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCapsule (float3 bottom, float3 top, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireCapsule(bottom, top, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireCapsule(float3,float3,float,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireCapsule (float3 position, float3 up, float height, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireCapsule(position, up, height, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireSphere(float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireSphere (float3 position, float radius, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireSphere(position, radius, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(List<Vector3>,bool,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (List<Vector3> points, bool cycle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(List<Vector3>,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (List<Vector3> points, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(Vector3[],bool,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (Vector3[] points, bool cycle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(Vector3[],Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (Vector3[] points, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(float3[],bool,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (float3[] points, bool cycle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(float3[],Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]
		public static void Polyline (float3[] points, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(NativeArray<float3>,bool,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Polyline (NativeArray<float3> points, bool cycle, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, cycle, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Polyline(NativeArray<float3>,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Polyline (NativeArray<float3> points, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Polyline(points, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(float3,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (float3 center, float3 size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(center, size, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(float3,Quaternion,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (float3 center, Quaternion rotation, float3 size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(center, rotation, size, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.WireBox(Bounds,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void WireBox (Bounds bounds, Color color) {
			RetainedGizmosWrapper.Init();
			builder.WireBox(bounds, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXZ(float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXZ (float3 position, float size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CrossXZ(position, size, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXZ(float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXZ (float3 position, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CrossXZ(position, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXY(float3,float,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXY (float3 position, float size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CrossXY(position, size, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.CrossXY(float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void CrossXY (float3 position, Color color) {
			RetainedGizmosWrapper.Init();
			builder.CrossXY(position, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.Bezier(float3,float3,float3,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void Bezier (float3 p0, float3 p1, float3 p2, float3 p3, Color color) {
			RetainedGizmosWrapper.Init();
			builder.Bezier(p0, p1, p2, p3, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(float3,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (float3 center, float3 size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(center, size, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(Bounds,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (Bounds bounds, Color color) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(bounds, color);
		}

		/// <summary>
		/// \copydoc Drawing.CommandBuilder.SolidBox(float3,Quaternion,float3,Color)
		/// Warning: This method cannot be used inside of Burst jobs. See job-system (view in online documentation for working links) instead.
		/// </summary>
		[BurstDiscard]

		public static void SolidBox (float3 center, Quaternion rotation, float3 size, Color color) {
			RetainedGizmosWrapper.Init();
			builder.SolidBox(center, rotation, size, color);
		}
	}
}
